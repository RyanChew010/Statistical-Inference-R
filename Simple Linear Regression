# Simple linear regression
# Data Preprocessing Template

# Importing the dataset
dataset <- read.csv(file.choose(), stringsAsFactors = T)
# dataset <- dataset[, 2:3]

# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)

# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)


# Fitting Simple Linear Regression to the training set 
# lm <- Linear Model
regressor <- lm(formula = Salary ~ YearsExperience,
                data = training_set) #Salary is proportionate to YE
# The ** represents strong statistical significance
summary(regressor)

# Predicting the test set results 
y_pred <- predict(regressor, newdata = test_set)
y_pred

# Visualizing the training set results
library(ggplot2)
ggplot() + 
  geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
             colour='blue') + 
  geom_line(aes(x = training_set$YearsExperience, 
                y = predict(regressor, newdata = training_set)),
            colour='black') + 
  ggtitle('Salary vs Experience (Training set)') + 
  xlab('Years of Experience') + 
  ylab('Salary')

# Doing it on the test set
regressor2 <- lm(formula = Salary ~ YearsExperience,
                 data = test_set)
summary(regressor2)
ggplot() + 
  geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
             colour='red') + 
  geom_line(aes(x = test_set$YearsExperience, 
                y = predict(regressor2, newdata = test_set)),
            colour='black') + 
  ggtitle('Salary vs Experience (test set') +
  xlab('Years of Experience') + 
  ylab('Salary')












