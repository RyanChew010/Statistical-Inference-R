#Multiple Linear Regression

dataset <- read.csv('50_Startups.csv')

#Encoding data (For interpretation)
dataset$State <- factor(dataset$State, 
                        levels = c('New York', 'California', 'Florida' ),
                        labels = c(1,2,3))


# Splitting the data set into training and test 
set.seed(123)
split <- sample.split(dataset$Profit, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)

# Wont need feature scaling in here as well.

# Fitting multiple linear regression on training set 
regressor <- lm(formula = Profit ~ .,
                data = training_set)
summary(regressor)

# Predicting the test set results
y_pred <- predict(regressor, newdata = test_set)
y_pred

ggplot() +
  geom_point(aes(x = training_set$R.D.Spend, y = training_set$Profit),
             colour='blue') +
  geom_line(aes(x = training_set$R.D.Spend,
                y = predict(regressor, newdata = training_set)),
            colour='black') +
  ggtitle('R&DSpending and Profits') +
  xlab('R&D $') +
  ylab('Profits')

# Building the model using backward elimination 

regressor <- lm(formula = Profit ~ R.D.Spend + Administration + 
                  Marketing.Spend + State, data = dataset)
summary(regressor)

regressor <- lm(formula = Profit ~ R.D.Spend + Administration + 
                  Marketing.Spend, data = dataset)
summary(regressor)

regressor <- lm(formula = Profit ~ R.D.Spend + 
                  Marketing.Spend, data = dataset)
summary(regressor)

# Automatic elimination 
backwardElimination <- function(x, sl) {
  numVars = length(x)
  for (i in c(1:numVars)){
    regressor = lm(formula = Profit ~ ., data = x)
    maxVar = max(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"])
    if (maxVar > sl){
      j = which(coef(summary(regressor))[c(2:numVars), "Pr(>|t|)"] == maxVar)
      x = x[, -j]
    }
    numVars = numVars - 1
  }
  return(summary(regressor))
}

SL = 0.05
dataset = dataset[, c(1,2,3,4,5)]
backwardElimination(training_set, SL)



















